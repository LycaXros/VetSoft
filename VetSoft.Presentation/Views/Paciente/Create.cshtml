@model PropPacViewModel

@{
    ViewBag.Title = "Nuevo Paciente";
}

<h2>Nuevo</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active disabled" id="nav-paciente-tab" data-toggle="tab" href="#nav-paciente"
               aria-controls="nav-paciente" aria-selected="true">Paciente</a>
            <a class="nav-item nav-link  disabled " id="nav-propietario-tab" data-toggle="tab" href="#nav-propietario"
               aria-controls="nav-propietario" aria-selected="false">Propietario</a>
            <a class="nav-item nav-link  disabled " id="nav-completar-tab" data-toggle="tab" href="#nav-completar"
               aria-controls="nav-completar" aria-selected="false">Enviar Datos</a>
        </div>
    </nav>

    <div class="tab-content" id="nav-tabContent">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="tab-pane fade show active" id="nav-paciente" role="tabpanel" aria-labelledby="nav-paciente-tab">

            <div class="form-horizontal">
                <h4>Datos del Paciente</h4>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Paciente.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Paciente.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.Color, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Paciente.Color, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Paciente.Color, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.Microchip_Licencia, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Paciente.Microchip_Licencia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Paciente.Microchip_Licencia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Paciente.Genero, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.EnumDropDownListFor(model => model.Paciente.Genero, "----SELECCIONE----", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Paciente.Genero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.RazaID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Paciente.RazaID, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Paciente.RazaID, (IEnumerable<SelectListItem>)ViewBag.Razas, "---Seleccione---", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Paciente.RazaID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Paciente.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Paciente.FechaNac, new { @class = "form-control", type = "date", max = DateTime.Now.ToString("yyyy-MM-dd") })
                        @Html.ValidationMessageFor(model => model.Paciente.FechaNac, "", new { @class = "text-danger" })
                    </div>
                </div>

                <span class="btn btn-info" onclick='CambiarTab("#nav-propietario-tab")'>Siguiente</span>
            </div>

        </div>
        <!-- Propietario -->
        <div class="tab-pane fade " id="nav-propietario" role="tabpanel" aria-labelledby="nav-propietario-tab">
            <div class="form-row">
                <label class="control-label col-md-4"> Elija la forma para el propietario</label>
                <div class="col-md-8">
                    <select id="propietarioStyle" class="form-control">
                        <option value="0" selected="selected"> Ya creado </option>
                        <option value="1"> Nuevo Propietario [+] </option>
                    </select>
                </div>
            </div>
            <br />
            <div id="NuevoPropietarioDiv">

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Nombre, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Propietario.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Propietario.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Apellido, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Propietario.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Propietario.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Email, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Propietario.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Propietario.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Telefono, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model=>model.Propietario.Telefono, new { @class = "form-control", data_mask = "(000)000-0000", data_mask_clearifnotmatch = "true", placeholder = "(999)999-9999"})
                        @Html.ValidationMessageFor(model => model.Propietario.Telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Telefono_2, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Propietario.Telefono_2, new { @class = "form-control", data_mask = "(000)000-0000", data_mask_clearifnotmatch = "true", placeholder = "(999)999-9999" })
                        @Html.ValidationMessageFor(model => model.Propietario.Telefono_2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.Direccion, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Propietario.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Propietario.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>
            <div id="SelectPropietarioDiv" >

                <div class="form-group form-row">
                    @Html.LabelFor(model => model.Propietario.ID, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Propietario.ID, (IEnumerable<SelectListItem>)ViewBag.PropietariosList, "---Seleccione---",new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Propietario.ID, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <br />
            <div class="form-group">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="btn btn-danger" onclick='CambiarTab("#nav-paciente-tab")'>Anterior</span>
                    </div>
                    <div class="input-group-text form-control">&nbsp;</div>

                    <div class="input-group-append">
                        <span class="btn btn-info" onclick='CambiarTab("#nav-completar-tab")'>Siguiente</span>
                    </div>
                </div>
            </div>
        </div>
        <!-- Completar -->
        <div class="tab-pane fade " id="nav-completar" role="tabpanel" aria-labelledby="nav-completar-tab">
            <div class="form-text">
                Desea Guardar los Datos?
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar Datos" class="btn btn-default" />
                </div>
            </div>
            <span class="btn btn-danger form-control" onclick='CambiarTab("#nav-propietario-tab")'>Anterior</span>
        </div>
    </div>


}
<br />
<div>
    @Html.ActionLink("Volver a la Lista", "Index")
</div>

@section Scripts {
    <script type="text/javascript">
        var nombreRequiredVal = " ";
        var apellidoRequiredVal = " ";
        var idRequiredVal = " ";
        $(function () { // will trigger when the document is ready

            nombreRequiredVal = $("#Propietario_Nombre").attr("data-val-required");
            apellidoRequiredVal = $("#Propietario_Apellido").attr("data-val-required");
            idRequiredVal = $("#Propietario_ID").attr("data-val-required");

            $('.datepicker').datepicker(); //Initialise any date pickers
            
            var v = $("#propietarioStyle").val();
            MostrarFormPropietario(v);

            $("#propietarioStyle").change(function (e) {
                var v = $("#propietarioStyle").val();
                MostrarFormPropietario(v);
            });
        });


        var CambiarTab = function (nameTab) {
            $(".nav-tabs").find(".nav-item").removeClass('active');
            $("#nav-tabContent").find(".tab-pane").removeClass('active');
            $("#nav-tabContent").find(".tab-pane").removeClass('show');
            $(nameTab).addClass("active");
            $panel = $($(nameTab).attr("href"));
            $panel.addClass("active"); $panel.addClass("show");
            return false;
        };
        var MostrarFormPropietario = function (t) {

            if (t == "1") {
                $("#NuevoPropietarioDiv").show();
                $("#SelectPropietarioDiv").hide();
                $("#Propietario_Nombre").attr("data-val-required", nombreRequiredVal);
                $("#Propietario_Apellido").attr("data-val-required", apellidoRequiredVal);
                $("#Propietario_ID").removeAttr("data-val-required");
                $("#Propietario_ID").val("0");

            } else if (t == "0") {
                $("#SelectPropietarioDiv").show();
                $("#NuevoPropietarioDiv").hide();
                $("#Propietario_Nombre").removeAttr("data-val-required");
                $("#Propietario_Apellido").removeAttr("data-val-required");
                $("#Propietario_ID").attr("data-val-required", idRequiredVal);
                $("#Propietario_ID").val("");
            }
            else {
                $("#NuevoPropietarioDiv").hide();
                $("#SelectPropietarioDiv").hide();
                $("#Propietario_ID").val("0");
                $("#Propietario_ID").removeAttr("data-val-required");
                $("#Propietario_Nombre").removeAttr("data-val-required");
                $("#Propietario_Apellido").removeAttr("data-val-required");
            }
        };
    </script>
}
